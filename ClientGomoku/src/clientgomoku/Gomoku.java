/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package clientgomoku;

import java.awt.Color;
import java.awt.Dimension;
import java.awt.event.ActionEvent;
import java.util.ArrayList;
import javax.swing.*;
import java.io.BufferedReader;
import java.io.DataOutputStream;
import java.io.IOException;
import java.io.InputStreamReader;
import java.net.Socket;
import javax.swing.SwingWorker;
import java.util.logging.Level;
import java.util.logging.Logger;

/**
 *
 * @author i-ONe
 */
public class Gomoku extends javax.swing.JFrame {
    private String Nickname;
    private int idUser;
    private String Roomname;
    private int RoomID;
    private ArrayList<String> RoomNameList = new ArrayList<String>();
    private ArrayList<Integer> RoomMemberList = new ArrayList<Integer>();
    private ArrayList<Integer> RoomCapacityList = new ArrayList<Integer>();
    private ArrayList<Integer> RoomIDList = new ArrayList<Integer>();
    private ArrayList<String> RoomMember = new ArrayList<String>();
    private int[][] Board = new int[20][20];
    private JButton[][] BoardUI = new JButton[20][20];
    private String WhoseTurn;
    private int[] NewMove = new int[2];
    private Socket cliSocket;
    public DataOutputStream outToServer;
    public BufferedReader inFromServer;
    private String currentMessage;
    private Timer timer;
    /**
     * Creates new form Gomoku
     */
    public Gomoku() {
        initComponents();
        MenuAwal.setVisible(true);
        PilihRoom.setVisible(false);
        MasukRoom.setVisible(false);
        Gameplay.setVisible(false);
        GagalBuatRoom.setVisible(false);
        GagalBuatRoom1.setVisible(false);
        GagalMasukRoom.setVisible(false);
        GagalLogin1.setVisible(false);
        GagalLogin2.setVisible(false);
        GameplayCover.setVisible(false);
        ResultPanel.setVisible(false);
        for (int i = 0; i < 20; i++){
            for (int j = 0; j < 20; j++){
                Board[i][j] = 0;
            }
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        Gomoku = new javax.swing.JLayeredPane();
        GagalLogin1 = new javax.swing.JPanel();
        LoginFailedPanel1 = new javax.swing.JPanel();
        LoginFailed1 = new javax.swing.JLabel();
        LoginFailedButton1 = new javax.swing.JButton();
        GagalLogin2 = new javax.swing.JPanel();
        LoginFailedPanel2 = new javax.swing.JPanel();
        LoginFailed2 = new javax.swing.JLabel();
        LoginFailedButton2 = new javax.swing.JButton();
        MenuAwal = new javax.swing.JPanel();
        PlayGameButton = new javax.swing.JLabel();
        ServerAddress = new javax.swing.JLabel();
        InsertServerAddress = new javax.swing.JTextField();
        Port = new javax.swing.JLabel();
        InsertPort = new javax.swing.JTextField();
        Port1 = new javax.swing.JLabel();
        InsertNickname = new javax.swing.JTextField();
        GagalBuatRoom = new javax.swing.JPanel();
        CreateRoomFailedPanel = new javax.swing.JPanel();
        CreateRoomFailed = new javax.swing.JLabel();
        CreateRoomFailedButton = new javax.swing.JButton();
        GagalBuatRoom1 = new javax.swing.JPanel();
        CreateRoomFailedPanel1 = new javax.swing.JPanel();
        CreateRoomFailed1 = new javax.swing.JLabel();
        CreateRoomFailedButton1 = new javax.swing.JButton();
        GagalMasukRoom = new javax.swing.JPanel();
        JoinRoomFailedPanel = new javax.swing.JPanel();
        JoinRoomFailed = new javax.swing.JLabel();
        JoinRoomFailedButton = new javax.swing.JButton();
        PilihRoom = new javax.swing.JPanel();
        ChooseRoom = new javax.swing.JLabel();
        CreateRoom = new javax.swing.JLabel();
        Or = new javax.swing.JLabel();
        ChooseRoomPane = new javax.swing.JScrollPane();
        InsideChooseRoomPane = new javax.swing.JPanel();
        CreateRoomDoor = new javax.swing.JLabel();
        RoomName = new javax.swing.JLabel();
        InsertRoomName = new javax.swing.JTextField();
        MaxPlayer = new javax.swing.JLabel();
        InsertMaxPlayer = new javax.swing.JTextField();
        CreateRoomButton = new javax.swing.JButton();
        MasukRoom = new javax.swing.JPanel();
        RoomTitle = new javax.swing.JLabel();
        PlayerListPane = new javax.swing.JScrollPane();
        InsidePlayerListPane = new javax.swing.JPanel();
        StartGame = new javax.swing.JLayeredPane();
        StartGameButtonDummy = new javax.swing.JButton();
        StartGameButton = new javax.swing.JButton();
        GameplayCover = new javax.swing.JPanel();
        ResultPanel = new javax.swing.JPanel();
        Result = new javax.swing.JLabel();
        Gameplay = new javax.swing.JPanel();
        GOMOKU = new javax.swing.JLabel();
        RoomTitle1 = new javax.swing.JLabel();
        Turn = new javax.swing.JLabel();
        PlayerTurn = new javax.swing.JLabel();
        GameBoard = new javax.swing.JPanel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setMaximumSize(new java.awt.Dimension(960, 560));
        setResizable(false);

        Gomoku.setPreferredSize(new java.awt.Dimension(960, 560));
        Gomoku.setLayout(new javax.swing.OverlayLayout(Gomoku));

        GagalLogin1.setMinimumSize(new java.awt.Dimension(960, 560));
        GagalLogin1.setOpaque(false);

        LoginFailedPanel1.setBackground(new java.awt.Color(204, 255, 255));

        LoginFailed1.setFont(new java.awt.Font("Prestige Elite Std", 1, 18)); // NOI18N
        LoginFailed1.setText("Login Failed: IP Address atau Port Salah");

        LoginFailedButton1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        LoginFailedButton1.setText("OK");
        LoginFailedButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                LoginFailedButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout LoginFailedPanel1Layout = new javax.swing.GroupLayout(LoginFailedPanel1);
        LoginFailedPanel1.setLayout(LoginFailedPanel1Layout);
        LoginFailedPanel1Layout.setHorizontalGroup(
            LoginFailedPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, LoginFailedPanel1Layout.createSequentialGroup()
                .addContainerGap(50, Short.MAX_VALUE)
                .addGroup(LoginFailedPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(LoginFailed1)
                    .addComponent(LoginFailedButton1))
                .addGap(48, 48, 48))
        );
        LoginFailedPanel1Layout.setVerticalGroup(
            LoginFailedPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(LoginFailedPanel1Layout.createSequentialGroup()
                .addContainerGap(98, Short.MAX_VALUE)
                .addComponent(LoginFailed1)
                .addGap(50, 50, 50)
                .addComponent(LoginFailedButton1)
                .addGap(27, 27, 27))
        );

        javax.swing.GroupLayout GagalLogin1Layout = new javax.swing.GroupLayout(GagalLogin1);
        GagalLogin1.setLayout(GagalLogin1Layout);
        GagalLogin1Layout.setHorizontalGroup(
            GagalLogin1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(GagalLogin1Layout.createSequentialGroup()
                .addGap(211, 211, 211)
                .addComponent(LoginFailedPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(211, Short.MAX_VALUE))
        );
        GagalLogin1Layout.setVerticalGroup(
            GagalLogin1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(GagalLogin1Layout.createSequentialGroup()
                .addGap(170, 170, 170)
                .addComponent(LoginFailedPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(171, Short.MAX_VALUE))
        );

        Gomoku.add(GagalLogin1);

        GagalLogin2.setMinimumSize(new java.awt.Dimension(960, 560));
        GagalLogin2.setOpaque(false);

        LoginFailedPanel2.setBackground(new java.awt.Color(204, 255, 255));

        LoginFailed2.setFont(new java.awt.Font("Prestige Elite Std", 1, 18)); // NOI18N
        LoginFailed2.setText("Login Failed: Nickname Sudah Digunakan");

        LoginFailedButton2.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        LoginFailedButton2.setText("OK");
        LoginFailedButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                LoginFailedButton2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout LoginFailedPanel2Layout = new javax.swing.GroupLayout(LoginFailedPanel2);
        LoginFailedPanel2.setLayout(LoginFailedPanel2Layout);
        LoginFailedPanel2Layout.setHorizontalGroup(
            LoginFailedPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, LoginFailedPanel2Layout.createSequentialGroup()
                .addContainerGap(50, Short.MAX_VALUE)
                .addGroup(LoginFailedPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(LoginFailed2)
                    .addComponent(LoginFailedButton2))
                .addGap(48, 48, 48))
        );
        LoginFailedPanel2Layout.setVerticalGroup(
            LoginFailedPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(LoginFailedPanel2Layout.createSequentialGroup()
                .addContainerGap(98, Short.MAX_VALUE)
                .addComponent(LoginFailed2)
                .addGap(50, 50, 50)
                .addComponent(LoginFailedButton2)
                .addGap(27, 27, 27))
        );

        javax.swing.GroupLayout GagalLogin2Layout = new javax.swing.GroupLayout(GagalLogin2);
        GagalLogin2.setLayout(GagalLogin2Layout);
        GagalLogin2Layout.setHorizontalGroup(
            GagalLogin2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(GagalLogin2Layout.createSequentialGroup()
                .addGap(222, 222, 222)
                .addComponent(LoginFailedPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(222, Short.MAX_VALUE))
        );
        GagalLogin2Layout.setVerticalGroup(
            GagalLogin2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(GagalLogin2Layout.createSequentialGroup()
                .addGap(170, 170, 170)
                .addComponent(LoginFailedPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(171, Short.MAX_VALUE))
        );

        Gomoku.add(GagalLogin2);

        MenuAwal.setBackground(new java.awt.Color(153, 204, 255));
        MenuAwal.setPreferredSize(new java.awt.Dimension(960, 560));

        PlayGameButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/clientgomoku/playbutton.png"))); // NOI18N
        PlayGameButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                PlayGameButtonMousePressed(evt);
            }
        });

        ServerAddress.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        ServerAddress.setText("Server:");

        InsertServerAddress.setFont(new java.awt.Font("Tw Cen MT Condensed Extra Bold", 0, 18)); // NOI18N
        InsertServerAddress.setHorizontalAlignment(javax.swing.JTextField.LEFT);
        InsertServerAddress.setToolTipText("");

        Port.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        Port.setText("Port:");

        InsertPort.setFont(new java.awt.Font("Tw Cen MT Condensed Extra Bold", 0, 18)); // NOI18N
        InsertPort.setHorizontalAlignment(javax.swing.JTextField.LEFT);
        InsertPort.setToolTipText("");

        Port1.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        Port1.setText("Nickname:");

        InsertNickname.setFont(new java.awt.Font("Tw Cen MT Condensed Extra Bold", 0, 18)); // NOI18N
        InsertNickname.setHorizontalAlignment(javax.swing.JTextField.LEFT);
        InsertNickname.setToolTipText("");

        javax.swing.GroupLayout MenuAwalLayout = new javax.swing.GroupLayout(MenuAwal);
        MenuAwal.setLayout(MenuAwalLayout);
        MenuAwalLayout.setHorizontalGroup(
            MenuAwalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(MenuAwalLayout.createSequentialGroup()
                .addGap(346, 346, 346)
                .addGroup(MenuAwalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(PlayGameButton)
                    .addGroup(MenuAwalLayout.createSequentialGroup()
                        .addGap(5, 5, 5)
                        .addGroup(MenuAwalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(ServerAddress)
                            .addComponent(Port)
                            .addComponent(Port1))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(MenuAwalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(InsertPort)
                            .addComponent(InsertServerAddress)
                            .addComponent(InsertNickname, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(345, Short.MAX_VALUE))
        );
        MenuAwalLayout.setVerticalGroup(
            MenuAwalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, MenuAwalLayout.createSequentialGroup()
                .addContainerGap(289, Short.MAX_VALUE)
                .addComponent(PlayGameButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(MenuAwalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(ServerAddress)
                    .addComponent(InsertServerAddress, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(MenuAwalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(Port)
                    .addComponent(InsertPort, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(MenuAwalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(InsertNickname, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Port1))
                .addGap(58, 58, 58))
        );

        Gomoku.add(MenuAwal);

        GagalBuatRoom.setMinimumSize(new java.awt.Dimension(960, 560));
        GagalBuatRoom.setOpaque(false);
        GagalBuatRoom.setPreferredSize(new java.awt.Dimension(960, 560));

        CreateRoomFailedPanel.setBackground(new java.awt.Color(204, 255, 255));

        CreateRoomFailed.setFont(new java.awt.Font("Prestige Elite Std", 1, 18)); // NOI18N
        CreateRoomFailed.setText("Create Failed: Room Dengan Nama Tersebut Telah Ada");

        CreateRoomFailedButton.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        CreateRoomFailedButton.setText("OK");
        CreateRoomFailedButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CreateRoomFailedButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout CreateRoomFailedPanelLayout = new javax.swing.GroupLayout(CreateRoomFailedPanel);
        CreateRoomFailedPanel.setLayout(CreateRoomFailedPanelLayout);
        CreateRoomFailedPanelLayout.setHorizontalGroup(
            CreateRoomFailedPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, CreateRoomFailedPanelLayout.createSequentialGroup()
                .addContainerGap(50, Short.MAX_VALUE)
                .addGroup(CreateRoomFailedPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(CreateRoomFailed)
                    .addComponent(CreateRoomFailedButton))
                .addGap(48, 48, 48))
        );
        CreateRoomFailedPanelLayout.setVerticalGroup(
            CreateRoomFailedPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(CreateRoomFailedPanelLayout.createSequentialGroup()
                .addContainerGap(98, Short.MAX_VALUE)
                .addComponent(CreateRoomFailed)
                .addGap(50, 50, 50)
                .addComponent(CreateRoomFailedButton)
                .addGap(27, 27, 27))
        );

        javax.swing.GroupLayout GagalBuatRoomLayout = new javax.swing.GroupLayout(GagalBuatRoom);
        GagalBuatRoom.setLayout(GagalBuatRoomLayout);
        GagalBuatRoomLayout.setHorizontalGroup(
            GagalBuatRoomLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(GagalBuatRoomLayout.createSequentialGroup()
                .addGap(156, 156, 156)
                .addComponent(CreateRoomFailedPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(156, Short.MAX_VALUE))
        );
        GagalBuatRoomLayout.setVerticalGroup(
            GagalBuatRoomLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(GagalBuatRoomLayout.createSequentialGroup()
                .addGap(170, 170, 170)
                .addComponent(CreateRoomFailedPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(171, Short.MAX_VALUE))
        );

        Gomoku.add(GagalBuatRoom);

        GagalBuatRoom1.setMinimumSize(new java.awt.Dimension(960, 560));
        GagalBuatRoom1.setOpaque(false);

        CreateRoomFailedPanel1.setBackground(new java.awt.Color(204, 255, 255));

        CreateRoomFailed1.setFont(new java.awt.Font("Prestige Elite Std", 1, 18)); // NOI18N
        CreateRoomFailed1.setText("Create Failed: Jumlah Player MInimal 3");

        CreateRoomFailedButton1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        CreateRoomFailedButton1.setText("OK");
        CreateRoomFailedButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CreateRoomFailedButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout CreateRoomFailedPanel1Layout = new javax.swing.GroupLayout(CreateRoomFailedPanel1);
        CreateRoomFailedPanel1.setLayout(CreateRoomFailedPanel1Layout);
        CreateRoomFailedPanel1Layout.setHorizontalGroup(
            CreateRoomFailedPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, CreateRoomFailedPanel1Layout.createSequentialGroup()
                .addContainerGap(50, Short.MAX_VALUE)
                .addGroup(CreateRoomFailedPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(CreateRoomFailed1)
                    .addComponent(CreateRoomFailedButton1))
                .addGap(48, 48, 48))
        );
        CreateRoomFailedPanel1Layout.setVerticalGroup(
            CreateRoomFailedPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(CreateRoomFailedPanel1Layout.createSequentialGroup()
                .addContainerGap(98, Short.MAX_VALUE)
                .addComponent(CreateRoomFailed1)
                .addGap(50, 50, 50)
                .addComponent(CreateRoomFailedButton1)
                .addGap(27, 27, 27))
        );

        javax.swing.GroupLayout GagalBuatRoom1Layout = new javax.swing.GroupLayout(GagalBuatRoom1);
        GagalBuatRoom1.setLayout(GagalBuatRoom1Layout);
        GagalBuatRoom1Layout.setHorizontalGroup(
            GagalBuatRoom1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(GagalBuatRoom1Layout.createSequentialGroup()
                .addGap(222, 222, 222)
                .addComponent(CreateRoomFailedPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(222, Short.MAX_VALUE))
        );
        GagalBuatRoom1Layout.setVerticalGroup(
            GagalBuatRoom1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(GagalBuatRoom1Layout.createSequentialGroup()
                .addGap(170, 170, 170)
                .addComponent(CreateRoomFailedPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(171, Short.MAX_VALUE))
        );

        Gomoku.add(GagalBuatRoom1);

        GagalMasukRoom.setMinimumSize(new java.awt.Dimension(960, 560));
        GagalMasukRoom.setOpaque(false);

        JoinRoomFailedPanel.setBackground(new java.awt.Color(204, 255, 255));

        JoinRoomFailed.setFont(new java.awt.Font("Prestige Elite Std", 1, 18)); // NOI18N
        JoinRoomFailed.setText("Room Penuh!");

        JoinRoomFailedButton.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        JoinRoomFailedButton.setText("OK");
        JoinRoomFailedButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                JoinRoomFailedButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout JoinRoomFailedPanelLayout = new javax.swing.GroupLayout(JoinRoomFailedPanel);
        JoinRoomFailedPanel.setLayout(JoinRoomFailedPanelLayout);
        JoinRoomFailedPanelLayout.setHorizontalGroup(
            JoinRoomFailedPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(JoinRoomFailedPanelLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(JoinRoomFailedButton)
                .addGap(48, 48, 48))
            .addGroup(JoinRoomFailedPanelLayout.createSequentialGroup()
                .addGap(215, 215, 215)
                .addComponent(JoinRoomFailed)
                .addContainerGap(214, Short.MAX_VALUE))
        );
        JoinRoomFailedPanelLayout.setVerticalGroup(
            JoinRoomFailedPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(JoinRoomFailedPanelLayout.createSequentialGroup()
                .addContainerGap(100, Short.MAX_VALUE)
                .addComponent(JoinRoomFailed)
                .addGap(48, 48, 48)
                .addComponent(JoinRoomFailedButton)
                .addGap(27, 27, 27))
        );

        javax.swing.GroupLayout GagalMasukRoomLayout = new javax.swing.GroupLayout(GagalMasukRoom);
        GagalMasukRoom.setLayout(GagalMasukRoomLayout);
        GagalMasukRoomLayout.setHorizontalGroup(
            GagalMasukRoomLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(GagalMasukRoomLayout.createSequentialGroup()
                .addGap(205, 205, 205)
                .addComponent(JoinRoomFailedPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(205, Short.MAX_VALUE))
        );
        GagalMasukRoomLayout.setVerticalGroup(
            GagalMasukRoomLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(GagalMasukRoomLayout.createSequentialGroup()
                .addGap(170, 170, 170)
                .addComponent(JoinRoomFailedPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(171, Short.MAX_VALUE))
        );

        Gomoku.add(GagalMasukRoom);

        PilihRoom.setBackground(new java.awt.Color(153, 204, 255));
        PilihRoom.setPreferredSize(new java.awt.Dimension(960, 560));

        ChooseRoom.setIcon(new javax.swing.ImageIcon(getClass().getResource("/clientgomoku/chooseRoom.png"))); // NOI18N

        CreateRoom.setIcon(new javax.swing.ImageIcon(getClass().getResource("/clientgomoku/createRoom.png"))); // NOI18N

        Or.setFont(new java.awt.Font("Stencil Std", 0, 36)); // NOI18N
        Or.setText("or");

        ChooseRoomPane.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_NEVER);

        InsideChooseRoomPane.setBackground(new java.awt.Color(204, 204, 255));
        InsideChooseRoomPane.setForeground(new java.awt.Color(153, 204, 255));

        javax.swing.GroupLayout InsideChooseRoomPaneLayout = new javax.swing.GroupLayout(InsideChooseRoomPane);
        InsideChooseRoomPane.setLayout(InsideChooseRoomPaneLayout);
        InsideChooseRoomPaneLayout.setHorizontalGroup(
            InsideChooseRoomPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 623, Short.MAX_VALUE)
        );
        InsideChooseRoomPaneLayout.setVerticalGroup(
            InsideChooseRoomPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 331, Short.MAX_VALUE)
        );

        ChooseRoomPane.setViewportView(InsideChooseRoomPane);

        CreateRoomDoor.setIcon(new javax.swing.ImageIcon(getClass().getResource("/clientgomoku/door.png"))); // NOI18N

        RoomName.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        RoomName.setText("Room Name:");

        InsertRoomName.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        InsertRoomName.setHorizontalAlignment(javax.swing.JTextField.CENTER);

        MaxPlayer.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        MaxPlayer.setText("Max. Player:");

        InsertMaxPlayer.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        InsertMaxPlayer.setHorizontalAlignment(javax.swing.JTextField.CENTER);

        CreateRoomButton.setBackground(new java.awt.Color(153, 153, 255));
        CreateRoomButton.setFont(new java.awt.Font("Segoe WP Black", 0, 18)); // NOI18N
        CreateRoomButton.setText("CREATE");
        CreateRoomButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CreateRoomButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout PilihRoomLayout = new javax.swing.GroupLayout(PilihRoom);
        PilihRoom.setLayout(PilihRoomLayout);
        PilihRoomLayout.setHorizontalGroup(
            PilihRoomLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PilihRoomLayout.createSequentialGroup()
                .addGap(41, 41, 41)
                .addGroup(PilihRoomLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(PilihRoomLayout.createSequentialGroup()
                        .addComponent(ChooseRoom)
                        .addGap(162, 162, 162)
                        .addComponent(Or))
                    .addComponent(ChooseRoomPane, javax.swing.GroupLayout.PREFERRED_SIZE, 625, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 34, Short.MAX_VALUE)
                .addGroup(PilihRoomLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, PilihRoomLayout.createSequentialGroup()
                        .addGroup(PilihRoomLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(MaxPlayer)
                            .addComponent(RoomName))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(PilihRoomLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(InsertRoomName, javax.swing.GroupLayout.PREFERRED_SIZE, 166, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(InsertMaxPlayer, javax.swing.GroupLayout.PREFERRED_SIZE, 166, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(CreateRoomButton))
                        .addContainerGap())
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, PilihRoomLayout.createSequentialGroup()
                        .addComponent(CreateRoomDoor)
                        .addGap(26, 26, 26))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, PilihRoomLayout.createSequentialGroup()
                        .addComponent(CreateRoom)
                        .addGap(36, 36, 36))))
        );
        PilihRoomLayout.setVerticalGroup(
            PilihRoomLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PilihRoomLayout.createSequentialGroup()
                .addGroup(PilihRoomLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(PilihRoomLayout.createSequentialGroup()
                        .addGap(41, 41, 41)
                        .addGroup(PilihRoomLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(ChooseRoom)
                            .addComponent(CreateRoom, javax.swing.GroupLayout.Alignment.TRAILING)))
                    .addGroup(PilihRoomLayout.createSequentialGroup()
                        .addGap(75, 75, 75)
                        .addComponent(Or)))
                .addGroup(PilihRoomLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(PilihRoomLayout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(CreateRoomDoor)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(PilihRoomLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(InsertRoomName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(RoomName))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(PilihRoomLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(InsertMaxPlayer, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(MaxPlayer))
                        .addGap(18, 18, 18)
                        .addComponent(CreateRoomButton)
                        .addGap(28, 28, 28))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, PilihRoomLayout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(ChooseRoomPane, javax.swing.GroupLayout.PREFERRED_SIZE, 333, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(44, 44, 44))))
        );

        Gomoku.add(PilihRoom);

        MasukRoom.setBackground(new java.awt.Color(153, 204, 255));
        MasukRoom.setPreferredSize(new java.awt.Dimension(960, 560));

        RoomTitle.setFont(new java.awt.Font("Segoe WP Black", 0, 36)); // NOI18N
        RoomTitle.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        RoomTitle.setText("jLabel1");

        PlayerListPane.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_NEVER);

        InsidePlayerListPane.setBackground(new java.awt.Color(204, 204, 255));
        InsidePlayerListPane.setForeground(new java.awt.Color(153, 204, 255));

        javax.swing.GroupLayout InsidePlayerListPaneLayout = new javax.swing.GroupLayout(InsidePlayerListPane);
        InsidePlayerListPane.setLayout(InsidePlayerListPaneLayout);
        InsidePlayerListPaneLayout.setHorizontalGroup(
            InsidePlayerListPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 728, Short.MAX_VALUE)
        );
        InsidePlayerListPaneLayout.setVerticalGroup(
            InsidePlayerListPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 331, Short.MAX_VALUE)
        );

        PlayerListPane.setViewportView(InsidePlayerListPane);

        StartGame.setLayout(new javax.swing.OverlayLayout(StartGame));

        StartGameButtonDummy.setFont(new java.awt.Font("Segoe WP Black", 0, 18)); // NOI18N
        StartGameButtonDummy.setForeground(new java.awt.Color(204, 204, 204));
        StartGameButtonDummy.setText("START GAME");
        StartGame.add(StartGameButtonDummy);

        StartGameButton.setFont(new java.awt.Font("Segoe WP Black", 0, 18)); // NOI18N
        StartGameButton.setText("START GAME");
        StartGameButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                StartGameButtonActionPerformed(evt);
            }
        });
        StartGame.add(StartGameButton);

        javax.swing.GroupLayout MasukRoomLayout = new javax.swing.GroupLayout(MasukRoom);
        MasukRoom.setLayout(MasukRoomLayout);
        MasukRoomLayout.setHorizontalGroup(
            MasukRoomLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(RoomTitle, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(MasukRoomLayout.createSequentialGroup()
                .addGap(115, 115, 115)
                .addComponent(PlayerListPane, javax.swing.GroupLayout.PREFERRED_SIZE, 730, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(169, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, MasukRoomLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(StartGame, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(181, 181, 181))
        );
        MasukRoomLayout.setVerticalGroup(
            MasukRoomLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(MasukRoomLayout.createSequentialGroup()
                .addGap(48, 48, 48)
                .addComponent(RoomTitle)
                .addGap(67, 67, 67)
                .addComponent(PlayerListPane, javax.swing.GroupLayout.PREFERRED_SIZE, 218, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 73, Short.MAX_VALUE)
                .addComponent(StartGame, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(73, 73, 73))
        );

        Gomoku.add(MasukRoom);

        GameplayCover.setBackground(new java.awt.Color(153, 204, 255));
        GameplayCover.setMinimumSize(new java.awt.Dimension(960, 560));
        GameplayCover.setOpaque(false);
        GameplayCover.setPreferredSize(new java.awt.Dimension(960, 560));

        ResultPanel.setBackground(new java.awt.Color(204, 255, 255));

        Result.setFont(new java.awt.Font("Viner Hand ITC", 0, 36)); // NOI18N
        Result.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        Result.setText("Result");

        javax.swing.GroupLayout ResultPanelLayout = new javax.swing.GroupLayout(ResultPanel);
        ResultPanel.setLayout(ResultPanelLayout);
        ResultPanelLayout.setHorizontalGroup(
            ResultPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(Result, javax.swing.GroupLayout.DEFAULT_SIZE, 396, Short.MAX_VALUE)
        );
        ResultPanelLayout.setVerticalGroup(
            ResultPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ResultPanelLayout.createSequentialGroup()
                .addContainerGap(68, Short.MAX_VALUE)
                .addComponent(Result, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(68, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout GameplayCoverLayout = new javax.swing.GroupLayout(GameplayCover);
        GameplayCover.setLayout(GameplayCoverLayout);
        GameplayCoverLayout.setHorizontalGroup(
            GameplayCoverLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(GameplayCoverLayout.createSequentialGroup()
                .addGap(282, 282, 282)
                .addComponent(ResultPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(282, Short.MAX_VALUE))
        );
        GameplayCoverLayout.setVerticalGroup(
            GameplayCoverLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(GameplayCoverLayout.createSequentialGroup()
                .addGap(185, 185, 185)
                .addComponent(ResultPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(185, Short.MAX_VALUE))
        );

        Gomoku.add(GameplayCover);

        Gameplay.setBackground(new java.awt.Color(153, 204, 255));
        Gameplay.setPreferredSize(new java.awt.Dimension(960, 560));

        GOMOKU.setFont(new java.awt.Font("Rockwell Extra Bold", 0, 48)); // NOI18N
        GOMOKU.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        GOMOKU.setText("GOMOKU");

        RoomTitle1.setFont(new java.awt.Font("Shonar Bangla", 0, 24)); // NOI18N
        RoomTitle1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        RoomTitle1.setText("jLabel1");

        Turn.setFont(new java.awt.Font("Showcard Gothic", 0, 11)); // NOI18N
        Turn.setText("TURN:");

        PlayerTurn.setFont(new java.awt.Font("Tempus Sans ITC", 0, 24)); // NOI18N
        PlayerTurn.setText("playername");

        javax.swing.GroupLayout GameBoardLayout = new javax.swing.GroupLayout(GameBoard);
        GameBoard.setLayout(GameBoardLayout);
        GameBoardLayout.setHorizontalGroup(
            GameBoardLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        GameBoardLayout.setVerticalGroup(
            GameBoardLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout GameplayLayout = new javax.swing.GroupLayout(Gameplay);
        Gameplay.setLayout(GameplayLayout);
        GameplayLayout.setHorizontalGroup(
            GameplayLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(GameplayLayout.createSequentialGroup()
                .addGap(157, 157, 157)
                .addComponent(GameBoard, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(135, 135, 135)
                .addGroup(GameplayLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(Turn)
                    .addComponent(PlayerTurn))
                .addContainerGap(153, Short.MAX_VALUE))
            .addComponent(RoomTitle1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(GOMOKU, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        GameplayLayout.setVerticalGroup(
            GameplayLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(GameplayLayout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addComponent(GOMOKU)
                .addGap(18, 18, 18)
                .addComponent(RoomTitle1)
                .addGroup(GameplayLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(GameplayLayout.createSequentialGroup()
                        .addGap(93, 93, 93)
                        .addComponent(Turn)
                        .addGap(27, 27, 27)
                        .addComponent(PlayerTurn))
                    .addGroup(GameplayLayout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(GameBoard, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(65, Short.MAX_VALUE))
        );

        Gomoku.add(Gameplay);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(Gomoku, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(Gomoku, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void createSocket(){
        try {
            cliSocket = new Socket(InsertServerAddress.getText(), Integer.parseInt(InsertPort.getText()));
            outToServer = new DataOutputStream(cliSocket.getOutputStream());
            inFromServer = new BufferedReader(new InputStreamReader(cliSocket.getInputStream()));
        } catch (IOException ex) {
            Logger.getLogger(Gomoku.class.getName()).log(Level.SEVERE, null, ex);
        }
        
    }
    
    private void sendToServer(String message){
        try {
            outToServer.writeBytes(message + '\n');
        } catch (IOException ex) {
            Logger.getLogger(Gomoku.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    
    private String receiveFromServer(){
        String message = "";
        try {
            message = inFromServer.readLine();
        } catch (IOException ex) {
            Logger.getLogger(Gomoku.class.getName()).log(Level.SEVERE, null, ex);
        }
        return message;
    }
    
    private void PlayGameButtonMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_PlayGameButtonMousePressed
        // TODO add your handling code here:java.awt.EventQueue.invokeLater(new Runnable() {
        if (!(InsertPort.getText().equals("") || InsertServerAddress.getText().equals("") || InsertNickname.getText().equals("") || InsertPort.getText().contains(",") || InsertServerAddress.getText().contains(",") || InsertNickname.getText().contains(","))){
            Nickname = InsertNickname.getText();
            createSocket();

            sendToServer(Nickname);
            currentMessage = receiveFromServer();
            String[] loginStatus = currentMessage.split(" ");
            if (loginStatus[0].equals("loginFailed")){
                GagalLogin2.setVisible(true);
            }
            else if (loginStatus[0].equals("loginSuccess")){
                String userId = loginStatus[1];
                idUser = Integer.parseInt(userId);
                MenuAwal.setVisible(false);
                PilihRoom.setVisible(true);
                MasukRoom.setVisible(false);
                Gameplay.setVisible(false);

                timer = new Timer(100, new java.awt.event.ActionListener() {
                    @Override
                    public void actionPerformed(ActionEvent e) {
                        // Data yang dikirim ke server
                        sendToServer("listRoom");
                        String cm = currentMessage;
                        // Data yang diterima dari server
                        currentMessage = receiveFromServer();
                        System.out.println("Sudah kekirim pesan ini: " + currentMessage);
                        if (cm.equals(currentMessage)){
                            //do nothing
                        }else{
                            String[] srvSentence = currentMessage.split(" ");
                            String roomlist = "";

                            if (srvSentence.length != 1){
                                int j = Integer.parseInt(srvSentence[1]);
                                System.out.println(roomlist);
                                RoomNameList = new ArrayList<String>();
                                RoomMemberList = new ArrayList<Integer>();
                                RoomCapacityList = new ArrayList<Integer>();
                                RoomIDList = new ArrayList<Integer>();
                                for(int k = 0; k < j; k++){
                                    String _roomname = srvSentence[k*4 + 2];
                                    String _roommember = srvSentence[k*4 + 3];
                                    String _roomcapacity = srvSentence[k*4 + 4];
                                    String _roomID = srvSentence[k*4 + 5];
                                    RoomNameList.add(_roomname);
                                    RoomMemberList.add(Integer.parseInt(_roommember));
                                    RoomCapacityList.add(Integer.parseInt(_roomcapacity));
                                    RoomIDList.add(Integer.parseInt(_roomID));
                                }
                                InsideChooseRoomPane.removeAll();
                                InsideChooseRoomPane.setLayout(new BoxLayout(InsideChooseRoomPane, BoxLayout.X_AXIS));
                                InsideChooseRoomPane.setBackground(new Color(153,204,255));
                                ChooseRoomPane.setViewportView(InsideChooseRoomPane);
                                for (int i = 0; i < RoomNameList.size(); i++){
                                    JPanel panelRoom = new JPanel();
                                    final String crn = RoomNameList.get(i);
                                    final int crnid = RoomIDList.get(i);
                                    panelRoom.setLayout(new BoxLayout(panelRoom, BoxLayout.Y_AXIS));
                                    panelRoom.setBackground(new Color(153,204,255));
                                    JLabel doorRoom = new JLabel(crn+"door");
                                    doorRoom.setIcon(new javax.swing.ImageIcon(getClass().getResource("/clientgomoku/door.png")));
                                    doorRoom.setText("");
                                    doorRoom.addMouseListener(new java.awt.event.MouseAdapter() {
                                        public void mousePressed(java.awt.event.MouseEvent evt) {
                                            Roomname = crn;
                                            RoomID = crnid;
                                            doorRoomMousePressed(evt);
                                        }
                                    });
                                    JLabel namaRoom = new JLabel("\n      "+RoomNameList.get(i)+" ("+RoomMemberList.get(i)+"/"+RoomCapacityList.get(i)+")");
                                    panelRoom.add(doorRoom);
                                    panelRoom.add(namaRoom);
                                    InsideChooseRoomPane.add(panelRoom);
                                    ChooseRoomPane.repaint();
                                    ChooseRoomPane.revalidate();
                                }
                            }
                        }
                    }
                });
                timer.start();  
            }else{
                GagalLogin1.setVisible(true);
            }
        }
    }//GEN-LAST:event_PlayGameButtonMousePressed

    private void CreateRoomButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CreateRoomButtonActionPerformed
        // TODO add your handling code here:
        if (!(InsertRoomName.getText().equals("") || InsertMaxPlayer.getText().equals("") || InsertRoomName.getText().contains(","))){
            if (Integer.parseInt(InsertMaxPlayer.getText()) >= 3){
                Roomname = InsertRoomName.getText();
                String sentence = "createroom " + Roomname + " " + InsertMaxPlayer.getText();
                sendToServer(sentence);
                currentMessage = receiveFromServer();
                System.out.println("Sudah kekirim pesan ini: " + currentMessage);
                String[] splitRoomStatus = currentMessage.split(" ");

                if (splitRoomStatus[0].equals("createSuccess")){
                    Roomname = splitRoomStatus[1];
                    RoomID = Integer.parseInt(splitRoomStatus[4]);
                    MenuAwal.setVisible(false);
                    PilihRoom.setVisible(false);
                    MasukRoom.setVisible(true);
                    Gameplay.setVisible(false);

                    timer.stop();
                    timer = new Timer(100, new java.awt.event.ActionListener() {
                        @Override
                        public void actionPerformed(ActionEvent e) {
                            sendToServer("listplayer " + RoomID);
                            String cm = currentMessage;

                            // Data yang diterima dari server
                            currentMessage = receiveFromServer();
                            System.out.println("Sudah kekirim pesan ini: " + currentMessage);

                            if (cm.equals(currentMessage)){
                                //do nothing
                            }else{
                                String[] splitSrvSentence = currentMessage.split(" ");
                                
                                if (Integer.parseInt(splitSrvSentence[0].substring(0,1)) == 0){
                                    RoomMember = new ArrayList<String>();
                                    for (int i = 0; i < Integer.parseInt(splitSrvSentence[1]); i++){
                                        RoomMember.add(splitSrvSentence[i + 2]);
                                        System.out.println(splitSrvSentence[i + 2]);
                                    }

                                    InsidePlayerListPane.removeAll();
                                    InsidePlayerListPane.setLayout(new BoxLayout(InsidePlayerListPane, BoxLayout.X_AXIS));
                                    InsidePlayerListPane.setBackground(new Color(153,204,255));
                                    PlayerListPane.setViewportView(InsidePlayerListPane);
                                    for (int i = 0; i < RoomMember.size(); i++){
                                        JPanel panelRoom = new JPanel();
                                        final String crn = RoomMember.get(i);
                                        panelRoom.setLayout(new BoxLayout(panelRoom, BoxLayout.Y_AXIS));
                                        panelRoom.setBackground(new Color(153,204,255));
                                        JLabel playerBaduk = new JLabel(crn+"baduk");
                                        playerBaduk.setIcon(new javax.swing.ImageIcon(getClass().getResource("/clientgomoku/player"+(i+1)+".png")));
                                        playerBaduk.setText("");
                                        JLabel namaPlayer = new JLabel("\n      "+crn);
                                        panelRoom.add(playerBaduk);
                                        panelRoom.add(namaPlayer);
                                        InsidePlayerListPane.add(panelRoom);
                                        PlayerListPane.repaint();
                                        PlayerListPane.revalidate();
                                    }
                                    RoomTitle.setText(Roomname);
                                    if ((RoomMember.size() >= 3) && Nickname.equals(RoomMember.get(0))) {
                                        StartGameButtonDummy.setVisible(false);
                                    }
                                }else{
                                    StartGame();
                                }
                            }
                        }
                    });
                    timer.start(); 
                }else{
                    GagalBuatRoom.setVisible(true);
                }
            }else{
                GagalBuatRoom1.setVisible(true);
            }
        }
    }//GEN-LAST:event_CreateRoomButtonActionPerformed

    private Color getColor(int k){
                Color x;
                if (k == 1) x =  new Color(255,0,0);
                else if (k == 2) x =  new Color(255,255,0);
                else if (k == 3) x =  new Color(0,0,255);
                else if (k == 4) x =  new Color(255,127,0);
                else if (k == 5) x =  new Color(255,0,255);
                else if (k == 6) x =  new Color(0,255,255);
                else if (k == 7) x =  new Color(127,127,0);
                else if (k == 8) x =  new Color(0,0,0);
                else if (k == 9) x =  new Color(127,127,127);
                else if (k == 10) x =  new Color(255,255,255);
                else  x = new Color(200,200,200);
        return x;
    }
    
    private void StartGameButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_StartGameButtonActionPerformed
        // TODO add your handling code here:
        StartGame();
    }//GEN-LAST:event_StartGameButtonActionPerformed

    private void StartGame(){
        RoomTitle1.setText(Roomname);
        MenuAwal.setVisible(false);
        PilihRoom.setVisible(false);
        MasukRoom.setVisible(false);
        Gameplay.setVisible(true);
        timer.stop();
        timer = new Timer(100, new java.awt.event.ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                sendToServer("play");
                String cm = currentMessage;
                currentMessage = receiveFromServer();
                System.out.println("Sudah kekirim pesan ini: " + currentMessage);
                
                if (cm.equals(currentMessage)){
                    //do nothing
                }else{
                    String[] boardStatus = currentMessage.split(" ");
                    if (Integer.parseInt(boardStatus[0].substring(0,1)) == 1){
                        PlayerTurn.setText(boardStatus[1]);
                        if (boardStatus[1].equals(Nickname)){
                            GameplayCover.setVisible(false);
                        }else{
                            GameplayCover.setVisible(true);
                        }
                        int k = 2;
                        for (int i = 0; i < 20; i ++){
                            for (int j = 0; j < 20; j++){
                                Board[i][j] = Integer.parseInt(boardStatus[k]);
                                k++;
                            }
                        }
                        createBoard();
                    }else{
                        GameplayCover.setVisible(true);
                        int k = 2;
                        for (int i = 0; i < 20; i ++){
                            for (int j = 0; j < 20; j++){
                                Board[i][j] = Integer.parseInt(boardStatus[k]);
                                k++;
                            }
                        }
                        createBoard();
                        timer.stop();
                        ResultPanel.setVisible(true);
                        if(boardStatus[1].equals(Nickname)){
                            Result.setText("You Win!");
                        }else{
                            Result.setText("You Lose.");
                        }
                    }
                }
            }
        });
        timer.start(); 
    }
    
    private void CreateRoomFailedButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CreateRoomFailedButtonActionPerformed
        // TODO add your handling code here:
        GagalBuatRoom.setVisible(false);
    }//GEN-LAST:event_CreateRoomFailedButtonActionPerformed

    private void LoginFailedButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_LoginFailedButton1ActionPerformed
        // TODO add your handling code here:
        GagalLogin1.setVisible(false);
    }//GEN-LAST:event_LoginFailedButton1ActionPerformed

    private void LoginFailedButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_LoginFailedButton2ActionPerformed
        // TODO add your handling code here:
        GagalLogin2.setVisible(false);
    }//GEN-LAST:event_LoginFailedButton2ActionPerformed

    private void JoinRoomFailedButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_JoinRoomFailedButtonActionPerformed
        // TODO add your handling code here:
        GagalMasukRoom.setVisible(false);
        timer.start();
    }//GEN-LAST:event_JoinRoomFailedButtonActionPerformed

    private void CreateRoomFailedButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CreateRoomFailedButton1ActionPerformed
        // TODO add your handling code here:
        GagalBuatRoom1.setVisible(false);
    }//GEN-LAST:event_CreateRoomFailedButton1ActionPerformed

    private void createBoard(){
        GameBoard.removeAll();
        GameBoard.setLayout(new BoxLayout(GameBoard, BoxLayout.X_AXIS));
        for (int i = 0; i < 20; i++){
            final int ordinat = i;
            JPanel panelRoom = new JPanel();
            panelRoom.setLayout(new BoxLayout(panelRoom, BoxLayout.Y_AXIS));
            for (int j = 0; j < 20; j++){
                final int axis = j;
                BoardUI[i][j] = new JButton();
                BoardUI[i][j].setText(" ");
                BoardUI[i][j].setPreferredSize(new Dimension(20,20));
                BoardUI[i][j].setBackground(getColor(Board[i][j]));
                BoardUI[i][j].addMouseListener(new java.awt.event.MouseAdapter() {
                    public void mousePressed(java.awt.event.MouseEvent evt) {
                        NewMove[0] = ordinat; NewMove[1] = axis;
                        buttonBoardPressed(evt);
                    }
                });
                panelRoom.add(BoardUI[i][j]);
            }
            GameBoard.add(panelRoom);
        }
        GameBoard.repaint();
        GameBoard.revalidate();
    }
    
    private void buttonBoardPressed(java.awt.event.MouseEvent evt){
        if ((Board[NewMove[0]][NewMove[1]] == 0) && PlayerTurn.getText().equals(Nickname)){
            sendToServer("userturn " + NewMove[0] + " "+ NewMove[1]);
        }
    }
    
    private void doorRoomMousePressed(java.awt.event.MouseEvent evt) {                                        
        // TODO add your handling code here:
        sendToServer("selectroom " + String.valueOf(RoomID));
        currentMessage = receiveFromServer();
        
        System.out.println("Sudah kekirim pesan ini: " + currentMessage);
        
        if (currentMessage.equals("selectroomSuccess")){
            MenuAwal.setVisible(false);
            PilihRoom.setVisible(false);
            MasukRoom.setVisible(true);
            Gameplay.setVisible(false);
            timer.stop();
            timer = new Timer(100, new java.awt.event.ActionListener() {
                @Override
                public void actionPerformed(ActionEvent e) {
                    sendToServer("listplayer " + RoomID);
                    String cm = currentMessage;

                    // Data yang diterima dari server
                    currentMessage = receiveFromServer();
                    System.out.println("Sudah kekirim pesan ini: " + currentMessage);

                    if (cm.equals(currentMessage)){
                        //do nothing
                    }else{
                        String[] splitSrvSentence = currentMessage.split(" ");
                        
                        if (Integer.parseInt(splitSrvSentence[0].substring(0,1)) == 0){
                            RoomMember = new ArrayList<String>();
                            for (int i = 0; i < Integer.parseInt(splitSrvSentence[1]); i++){
                                RoomMember.add(splitSrvSentence[i + 2]);
                                System.out.println(splitSrvSentence[i + 2]);
                            }

                            InsidePlayerListPane.removeAll();
                            InsidePlayerListPane.setLayout(new BoxLayout(InsidePlayerListPane, BoxLayout.X_AXIS));
                            InsidePlayerListPane.setBackground(new Color(153,204,255));
                            PlayerListPane.setViewportView(InsidePlayerListPane);
                            for (int i = 0; i < RoomMember.size(); i++){
                                JPanel panelRoom = new JPanel();
                                final String crn = RoomMember.get(i);
                                panelRoom.setLayout(new BoxLayout(panelRoom, BoxLayout.Y_AXIS));
                                panelRoom.setBackground(new Color(153,204,255));
                                JLabel playerBaduk = new JLabel(crn+"baduk");
                                playerBaduk.setIcon(new javax.swing.ImageIcon(getClass().getResource("/clientgomoku/player"+(i+1)+".png")));
                                playerBaduk.setText("");
                                JLabel namaPlayer = new JLabel("\n      "+crn);
                                panelRoom.add(playerBaduk);
                                panelRoom.add(namaPlayer);
                                InsidePlayerListPane.add(panelRoom);
                                PlayerListPane.repaint();
                                PlayerListPane.revalidate();
                            }
                            RoomTitle.setText(Roomname);
                            if ((RoomMember.size() >= 3) && Nickname.equals(RoomMember.get(0))) {
                                StartGameButtonDummy.setVisible(false);
                            }
                        }else{
                            StartGame();
                        }
                    }
                }
            });
            timer.start();  
        }else{
            GagalMasukRoom.setVisible(true);
            timer.stop();
        }
    } 
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Gomoku.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Gomoku.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Gomoku.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Gomoku.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Gomoku().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel ChooseRoom;
    private javax.swing.JScrollPane ChooseRoomPane;
    private javax.swing.JLabel CreateRoom;
    private javax.swing.JButton CreateRoomButton;
    private javax.swing.JLabel CreateRoomDoor;
    private javax.swing.JLabel CreateRoomFailed;
    private javax.swing.JLabel CreateRoomFailed1;
    private javax.swing.JButton CreateRoomFailedButton;
    private javax.swing.JButton CreateRoomFailedButton1;
    private javax.swing.JPanel CreateRoomFailedPanel;
    private javax.swing.JPanel CreateRoomFailedPanel1;
    private javax.swing.JLabel GOMOKU;
    private javax.swing.JPanel GagalBuatRoom;
    private javax.swing.JPanel GagalBuatRoom1;
    private javax.swing.JPanel GagalLogin1;
    private javax.swing.JPanel GagalLogin2;
    private javax.swing.JPanel GagalMasukRoom;
    private javax.swing.JPanel GameBoard;
    private javax.swing.JPanel Gameplay;
    private javax.swing.JPanel GameplayCover;
    private javax.swing.JLayeredPane Gomoku;
    private javax.swing.JTextField InsertMaxPlayer;
    private javax.swing.JTextField InsertNickname;
    private javax.swing.JTextField InsertPort;
    private javax.swing.JTextField InsertRoomName;
    private javax.swing.JTextField InsertServerAddress;
    private javax.swing.JPanel InsideChooseRoomPane;
    private javax.swing.JPanel InsidePlayerListPane;
    private javax.swing.JLabel JoinRoomFailed;
    private javax.swing.JButton JoinRoomFailedButton;
    private javax.swing.JPanel JoinRoomFailedPanel;
    private javax.swing.JLabel LoginFailed1;
    private javax.swing.JLabel LoginFailed2;
    private javax.swing.JButton LoginFailedButton1;
    private javax.swing.JButton LoginFailedButton2;
    private javax.swing.JPanel LoginFailedPanel1;
    private javax.swing.JPanel LoginFailedPanel2;
    private javax.swing.JPanel MasukRoom;
    private javax.swing.JLabel MaxPlayer;
    private javax.swing.JPanel MenuAwal;
    private javax.swing.JLabel Or;
    private javax.swing.JPanel PilihRoom;
    private javax.swing.JLabel PlayGameButton;
    private javax.swing.JScrollPane PlayerListPane;
    private javax.swing.JLabel PlayerTurn;
    private javax.swing.JLabel Port;
    private javax.swing.JLabel Port1;
    private javax.swing.JLabel Result;
    private javax.swing.JPanel ResultPanel;
    private javax.swing.JLabel RoomName;
    private javax.swing.JLabel RoomTitle;
    private javax.swing.JLabel RoomTitle1;
    private javax.swing.JLabel ServerAddress;
    private javax.swing.JLayeredPane StartGame;
    private javax.swing.JButton StartGameButton;
    private javax.swing.JButton StartGameButtonDummy;
    private javax.swing.JLabel Turn;
    // End of variables declaration//GEN-END:variables
}
